<comment>
problem   = Adding cloud
configure = --prob=turb_v2 -fft 

<job>
problem_id = Turb # problem ID: basename of output filenames

<output1>
file_type  = hst        # history data dump
dt         = 0.0000274    # time increment between outputs

<output2>
file_type = hdf5        # HDF5 data dump
variable  = prim        # variables to be output
dt        = 0.00274       # time increment between outputs

<output3>
file_type = rst         # restart file dump                       
dt        = 0.0274         # time increment between outputs

<output4>
file_type   = hdf5         # HDF5 data dump
dt          = 0.00274        # User-defined output (luminosity)
variable    = user_out_var # time increment between outputs

<output5>
file_type = hdf5        # HDF5 data dump
variable  = cons        # variables to be output
dt        = 0.00274       # time increment between outputs


<time>
cfl_number  = 0.2       # The Courant, Friedrichs, & Lewy (CFL) Number
nlim        = -1        # cycle limit
tlim        = 0.274        # time limit
integrator  = rk2       # time integration algorithm
xorder      = 2         # order of spatial reconstruction
ncycle_out  = 1         # interval for stdout summary info

<mesh>
nx1    = 128             # number of zones in x1-direction
x1min  = -0.00212544           # minimum value of x1
x1max  = 0.00212544       # maximum value of x1
ix1_bc = periodic       # inner-x1 boundary condition
ox1_bc = periodic       # outer-x1 boundary condition

nx2    = 128             # number of zones in x2-direction
x2min  = -0.00212544           # minimum value of x2
x2max  = 0.00212544          # maximum value of x2
ix2_bc = periodic       # inner-x2 boundary condition
ox2_bc = periodic       # outer-x2 boundary condition

nx3    = 128             # number of zones in x3-direction
x3min  = -0.00212544          # minimum value of x3
x3max  = 0.00212544          # maximum value of x3
ix3_bc = periodic       # inner-x3 boundary condition
ox3_bc = periodic       # outer-x3 boundary condition

refinement  = none      # type of mesh refinement to use

<meshblock>
nx1 = 32                # block size in x1-direction
nx2 = 32                # block size in x2-direction
nx3 = 16                # block size in x3-direction

<hydro>
gamma      = 1.6666666666666667  # gamma = C_p/C_v
pfloor     = 0.0000005              # pressure floor

<turbulence>
dedt       = 0.00000007914             # Energy injection rate (for driven) or Total energy (for decaying)
#                                  dedt = 0.5 * v_turb^3 = (Mach_num*cs_hot)^3
nlow       = 0                   # cut-off wavenumber at low-k
nhigh      = 2                   # cut-off wavenumber at high-k
expo       = 2.0                 # power-law exponent
tcorr      = 0.0274                # correlation time for OU process (both impulsive and continuous)
dtdrive    = 0.000274             # time interval between perturbation (impulsive)
f_shear    = 0.3                 # the ratio of the shear component
rseed      = 1                   # if non-negative, seed will be set by hand (slow PS generation)

# tcorr ~ t_eddy
# dtdrive << t_eddy

<problem>

turb_flag    = 2                 # 1 for decaying, 2 (impulsive) or 3 (continuous) for driven turbulence

# User-defined variables:

heating = 0.001                  # constant volume heating rate

cs_hot = 0.34

cooling_flag = 0                 # set to 1 to turn on cooling, 0 to turn it off
global_cooling_flag = 0         # set to 1 to turn on uniform global cooling, 0 to turn it off
cloud_flag   = 0                 # set to 1 to add the cloud on restart, 0 to not 
rescale_flag = 0                 # If cloud_flag is 1, checks for rescaling the temperature on restart

amb_rho      = 0.01               # density of the ambient medium, in code units

cloud_radius = 0.000106272           # radius of the cloud, in code units
cloud_time   = 42.0              # time of insertion of cloud, in code units
cloud_chi    = 1000               # density contrast of the cloud, rho_cloud/amb_rho


T_floor      = 40000             # floor temperature in the simulation
T_ceil       = 1000000000         # ceiling temperature in the simulation
T_hot_req    = 40000000           # hot medium temperature required, reset to this on restart, if cloud_flag is 1
T_hot        = 10000000            # initial hot medium temperature (box heats up due to turbulence) increased by a order
T_cold       = 80000             # cold medium temperature, used in cold gas mass calculation
T_cut_mul    = 0.5               # T_cut = T_hot_req * T_cut_mul, gas higher than T_cut is not cooled
T_cut        = 20000000.0         # gas higher than T_cut is not cooled

# Xsol         = 1.0            # Change H-abundance src/utils/code_units
# Zsol         = 1.0            # Change metallicity src/utils/code_units

cloud_pos_x  = 0.0               # cloud center position x-coordinate
cloud_pos_y  = 0.0               # cloud center position y-coordinate
cloud_pos_z  = 0.0               # cloud center position z-coordinate

B_x          = 0.0               # initial magnetic field in x-direction
B_y          = 0.0               # initial magnetic field in y-direction
B_z          = 0.0               # initial magnetic field in z-direction


#Parameter to solve error
hdf_cloud_flag = 0
T_warm = 40000000
restart_cloud_flag    =  0


cons_input_filename = /u/ageorge/athena_fork_turb_box/Turb_v2_init/Test_11/0.00106272/1/Turb/Turb.out5.00100.athdf  # name of HDF5 file containing initial conditions
dataset_cons   = cons       # name of dataset containing conserved values
index_dens     = 0          # index of density in conserved dataset
index_etot     = 1          # index of energy in conserved dataset (for nonbarotropic EOS)
index_mom1     = 2          # index of x1-momentum in conserved dataset
index_mom2     = 3          # index of x2-momentum in conserved dataset
index_mom3     = 4          # index of x3-momentum in conserved dataset

b1_input_filename = /dev/null  # name of HDF5 file containing initial conditions
b2_input_filename = /dev/null  # name of HDF5 file containing initial conditions
b3_input_filename = /dev/null  # name of HDF5 file containing initial conditions
